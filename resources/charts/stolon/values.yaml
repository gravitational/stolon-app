# Default values for stolon.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

registry: ""
tag: latest

image:
  repository: stolon
  pullPolicy: Always

etcdImage:
  repository: stolon-etcd
  pullPolicy: Always

pgbouncerImage:
  repository: stolon-pgbouncer
  pullPolicy: Always

stolonctlImage:
  repository: stolonctl
  pullPolicy: Always

debug: false

rbac:
  create: true

serviceAccount:
  create: true
  # The name of the ServiceAccount to use. If not set and create is true, a name is generated using the fullname template
  name:

# # Use existing secret (ignores superuser and replication passwords)
# existingSecret:

superuser:
  username: stolon
  password:
  ## Option to force users to specify a password. That is required for 'helm upgrade' to work properly.
  ## If it is not force, a random password will be generated.
  forcePassword: false

replication:
  username: repluser
  password:
  ## Option to force users to specify a password. That is required for 'helm upgrade' to work properly.
  ## If it is not force, a random password will be generated.
  forcePassword: false

# backend could be one of the following: consul, etcdv2, etcdv3 or kubernetes
store:
  backend: etcd
  endpoints: "http://127.0.0.1:2379"

clusterSpec:
  max_replication_lag: 300

ports:
  stolon:
    containerPort: 5432
  stolonrpc:
    containerPort: 5431

sentinel:
  containerPort: 6431
  keeperControlPort: 5431
  configMountPath: /etc/stolon/
  replicaCount: 2
  affinity: {}
  initVolumeMounts:
    - name: stolon-secrets
      mountPath: /home/stolon/secrets
    - name: etcd-secrets
      mountPath: /var/state
  volumeMounts:
    - name: stolon-secrets
      mountPath: /home/stolon/secrets
  volumes:
    - name: stolon-secrets
      emptyDir: {}
    - name: etcd-secrets
      hostPath:
        path: /var/state

keeper:
  replicaCount: 2
  nodeSelector: {}
  initVolumeMounts:
    - name: data
      mountPath: /stolon-data
  etcdVolumeMounts:
    - name: stolon-secrets
      mountPath: /home/stolon/secrets
  volumeMounts:
    - name: data
      mountPath: /stolon-data
    - name: stolon-secrets
      mountPath: /home/stolon/secrets
  volumes:
    - name: etcd-secrets
      hostPath:
        path: /var/state

proxy:
  containerPort: 5434
  service:
    type: ClusterIP
#    loadBalancerIP: ""
    ports:
      proxy:
        port: 5432
        targetPort: 5434
        protocol: TCP

pgbouncer:
  replicaCount: 2
  affinity: {}
  service:
    type: ClusterIP
#    loadBalancerIP: ""
    ports:
      pgbouncer:
        port: 5432
        targetPort: 6432
        protocol: TCP

pgbouncerConfig:
  maxClientConnections: 100
  serverTLSMode: require
  serverTLSCertFile: /home/stolon/secrets/pgbouncer.pem
  serverTLSKeyFile: /home/stolon/secrets/pgbouncer-key.pem

stolonctl:
  replicaCount: 1
  service:
    type: ClusterIP
#    loadBalancerIP: ""
    ports:
      stolonctl:
        port: 8080
        targetPort: 8080
        protocol: TCP
