---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "stolon.fullname" . }}-postgres-hardening
  labels:
    app: {{ template "stolon.name" . }}
    chart: {{ template "stolon.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  parallelism: 1
  completions: 1
  activeDeadlineSeconds: 600
  template:
    metadata:
      app: {{ template "stolon.fullname" . }}
      release: {{ .Release.Name }}
      name: {{ template "stolon.fullname" . }}-postgres-hardening
      stolon-cluster: {{ template "stolon.clusterName" . }}
    spec:
      restartPolicy: OnFailure
      securityContext:
        runAsUser: 1000
      serviceAccountName: {{ template "stolon.serviceAccountName" . }}
      containers:
        - name: postgres-hardening
          image: "{{ .Values.registry }}{{ .Values.image.repository }}:{{ .Values.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/usr/bin/dumb-init", "--", "/usr/local/bin/stolon-security.sh"]
          env:
            - name: PG_SERVICE
              value: {{ template "stolon.fullname" . }}-postgres.default.svc
            - name: PG_USERNAME
              value: {{ .Values.superuser.username | quote }}
            - name: PG_PASSWORD
              valueFrom:
                secretKeyRef:
                  {{- if .Values.existingSecret }}
                  name: {{ .Values.existingSecret | quote }}
                  {{- else }}
                  name: {{ template "stolon.fullname" . }}
                  {{- end }}
                  key: "password"
